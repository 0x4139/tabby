"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3823,1624,3396],{48537:function(n,e,t){t.d(e,{q:function(){return s}});var r=t(36164);t(3546);var i=t(28312),a=t(31458),o=t(81565);function s(n){let{className:e,value:t,onCopyContent:s,text:u,...d}=n,{isCopied:l,copyToClipboard:f}=(0,i.m)({timeout:2e3,onCopyContent:s});return t?(0,r.jsxs)(a.z,{variant:"ghost",size:u?"default":"icon",className:e,onClick:()=>{l||f(t)},...d,children:[l?(0,r.jsx)(o.IconCheck,{className:"text-green-600"}):(0,r.jsx)(o.IconCopy,{}),u&&(0,r.jsx)("span",{children:u}),!u&&(0,r.jsx)("span",{className:"sr-only",children:"Copy"})]}):null}},31458:function(n,e,t){t.d(e,{d:function(){return u},z:function(){return d}});var r=t(36164),i=t(3546),a=t(74047),o=t(14375),s=t(74248);let u=(0,o.j)("inline-flex items-center justify-center rounded-md text-sm font-medium shadow ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground shadow-md hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90","hover-destructive":"shadow-none hover:bg-destructive/90 hover:text-destructive-foreground",outline:"border border-input hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"shadow-none hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 shadow-none hover:underline"},size:{default:"h-8 px-4 py-2",sm:"h-8 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-8 w-8 p-0"}},defaultVariants:{variant:"default",size:"default"}}),d=i.forwardRef((n,e)=>{let{className:t,variant:i,size:o,asChild:d=!1,...l}=n,f=d?a.g7:"button";return(0,r.jsx)(f,{className:(0,s.cn)(u({variant:i,size:o,className:t})),ref:e,...l})});d.displayName="Button"},82394:function(n,e,t){t.d(e,{I:function(){return o}});var r=t(36164),i=t(3546),a=t(74248);let o=i.forwardRef((n,e)=>{let{className:t,type:i,...o}=n;return(0,r.jsx)("input",{type:i,className:(0,a.cn)("flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",t),ref:e,...o})});o.displayName="Input"},11208:function(n,e,t){t.d(e,{Z:function(){return s}});var r=t(36164),i=t(3546),a=t(74225),o=t(74248);let s=i.forwardRef((n,e)=>{let{className:t,orientation:i="horizontal",decorative:s=!0,...u}=n;return(0,r.jsx)(a.f,{ref:e,decorative:s,orientation:i,className:(0,o.cn)("shrink-0 bg-border","horizontal"===i?"h-[1px] w-full":"h-full w-[1px]",t),...u})});s.displayName=a.f.displayName},3448:function(n,e,t){t.d(e,{O:function(){return a}});var r=t(36164),i=t(74248);function a(n){let{className:e,...t}=n;return(0,r.jsx)("div",{className:(0,i.cn)("h-4 animate-pulse rounded-md bg-gray-200 dark:bg-gray-700",e),...t})}},29:function(n,e,t){t.d(e,{_v:function(){return l},aJ:function(){return d},pn:function(){return s},u:function(){return u}});var r=t(36164),i=t(3546),a=t(44421),o=t(74248);let s=a.zt,u=a.fC,d=a.xz,l=i.forwardRef((n,e)=>{let{className:t,sideOffset:i=4,...s}=n;return(0,r.jsx)(a.VY,{ref:e,sideOffset:i,className:(0,o.cn)("z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-xs font-medium text-popover-foreground shadow-md animate-in fade-in-50 data-[side=bottom]:slide-in-from-top-1 data-[side=left]:slide-in-from-right-1 data-[side=right]:slide-in-from-left-1 data-[side=top]:slide-in-from-bottom-1",t),...s})});l.displayName=a.VY.displayName},75561:function(n,e,t){t.d(e,{B:function(){return a}});var r=t(18500);let i={"\n  query ListUserEvents(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n  ) {\n    userEvents(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      start: $start\n      end: $end\n      users: $users\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          kind\n          payload\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.UQ,"\n  mutation uploadUserAvatarBase64($id: ID!, $avatarBase64: String!) {\n    uploadUserAvatarBase64(id: $id, avatarBase64: $avatarBase64)\n  }\n":r.eI,"\n  mutation UpdateUserName($id: ID!, $name: String!) {\n    updateUserName(id: $id, name: $name)\n  }\n":r.DQ,"\n  mutation PasswordChange($input: PasswordChangeInput!) {\n    passwordChange(input: $input)\n  }\n":r.oZ,"\n  mutation updateEmailSetting($input: EmailSettingInput!) {\n    updateEmailSetting(input: $input)\n  }\n":r.gl,"\n  mutation deleteEmailSetting {\n    deleteEmailSetting\n  }\n":r.wZ,"\n  mutation SendTestEmail($to: String!) {\n    sendTestEmail(to: $to)\n  }\n":r.nI,"\n  query emailSetting {\n    emailSetting {\n      smtpUsername\n      smtpServer\n      fromAddress\n      encryption\n      authMethod\n      smtpPort\n    }\n  }\n":r.k6,"\n  mutation UpdateIntegration($input: UpdateIntegrationInput!) {\n    updateIntegration(input: $input)\n  }\n":r.fc,"\n  mutation DeleteIntegration($id: ID!, $kind: IntegrationKind!) {\n    deleteIntegration(id: $id, kind: $kind)\n  }\n":r.AU,"\n  mutation UpdateIntegratedRepositoryActive($id: ID!, $active: Boolean!) {\n    updateIntegratedRepositoryActive(id: $id, active: $active)\n  }\n":r.o7,"\n  mutation CreateIntegration($input: CreateIntegrationInput!) {\n    createIntegration(input: $input)\n  }\n":r.fY,"\n  mutation deleteGitRepository($id: ID!) {\n    deleteGitRepository(id: $id)\n  }\n":r.TS,"\n  mutation createGitRepository($name: String!, $gitUrl: String!) {\n    createGitRepository(name: $name, gitUrl: $gitUrl)\n  }\n":r.ad,"\n  mutation triggerJobRun($command: String!) {\n    triggerJobRun(command: $command)\n  }\n":r.uk,"\n  mutation DeleteWebCrawlerUrl($id: ID!) {\n    deleteWebCrawlerUrl(id: $id)\n  }\n":r.kP,"\n  mutation CreateWebCrawlerUrl($input: CreateWebCrawlerUrlInput!) {\n    createWebCrawlerUrl(input: $input)\n  }\n":r.ab,"\n  mutation updateOauthCredential($input: UpdateOAuthCredentialInput!) {\n    updateOauthCredential(input: $input)\n  }\n":r.m,"\n  mutation deleteOauthCredential($provider: OAuthProvider!) {\n    deleteOauthCredential(provider: $provider)\n  }\n":r.ZH,"\n  query OAuthCallbackUrl($provider: OAuthProvider!) {\n    oauthCallbackUrl(provider: $provider)\n  }\n":r.L$,"\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n":r.Fd,"\n  mutation updateNetworkSettingMutation($input: NetworkSettingInput!) {\n    updateNetworkSetting(input: $input)\n  }\n":r.rN,"\n  mutation updateSecuritySetting($input: SecuritySettingInput!) {\n    updateSecuritySetting(input: $input)\n  }\n":r.Nl,"\n  query SecuritySetting {\n    securitySetting {\n      allowedRegisterDomainList\n      disableClientSideTelemetry\n    }\n  }\n":r.rU,"\n  mutation UploadLicense($license: String!) {\n    uploadLicense(license: $license)\n  }\n":r.Yo,"\n  mutation ResetLicense {\n    resetLicense\n  }\n":r.d0,"\n  mutation CreateInvitation($email: String!) {\n    createInvitation(email: $email)\n  }\n":r.ib,"\n  mutation DeleteInvitation($id: ID!) {\n    deleteInvitation(id: $id)\n  }\n":r.YM,"\n  mutation updateUserRole($id: ID!, $isAdmin: Boolean!) {\n    updateUserRole(id: $id, isAdmin: $isAdmin)\n  }\n":r.XF,"\n  mutation UpdateUserActive($id: ID!, $active: Boolean!) {\n    updateUserActive(id: $id, active: $active)\n  }\n":r.dv,"\n  query GetRegistrationToken {\n    registrationToken\n  }\n":r.bh,"\n  mutation ResetRegistrationToken {\n    resetRegistrationToken\n  }\n":r.wW,"\n  query GetDiskUsageStats {\n    diskUsageStats {\n      events {\n        filepath\n        sizeKb\n      }\n      indexedRepositories {\n        filepath\n        sizeKb\n      }\n      database {\n        filepath\n        sizeKb\n      }\n      models {\n        filepath\n        sizeKb\n      }\n    }\n  }\n":r.xX,"\n  mutation ResetUserAuthToken {\n    resetUserAuthToken\n  }\n":r.qq,"\n  mutation passwordReset($input: PasswordResetInput!) {\n    passwordReset(input: $input)\n  }\n":r.vK,"\n  mutation requestPasswordResetEmail($input: RequestPasswordResetEmailInput!) {\n    requestPasswordResetEmail(input: $input)\n  }\n":r.i8,"\n  mutation requestInvitationEmail($input: RequestInvitationInput!) {\n    requestInvitationEmail(input: $input) {\n      email\n      code\n    }\n  }\n":r.S_,"\n  mutation tokenAuth($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":r.UO,"\n  mutation register(\n    $name: String!\n    $email: String!\n    $password1: String!\n    $password2: String!\n    $invitationCode: String\n  ) {\n    register(\n      name: $name\n      email: $email\n      password1: $password1\n      password2: $password2\n      invitationCode: $invitationCode\n    ) {\n      accessToken\n      refreshToken\n    }\n  }\n":r.YR,"\n  query RepositorySearch(\n    $kind: RepositoryKind!\n    $id: ID!\n    $rev: String\n    $pattern: String!\n  ) {\n    repositorySearch(kind: $kind, id: $id, rev: $rev, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n":r.BH,"\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      refs\n    }\n  }\n":r.HC,"\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n":r.eZ,"\n  query MeQuery {\n    me {\n      id\n      authToken\n      email\n      isAdmin\n      isPasswordSet\n      name\n    }\n  }\n":r.fk,"\n  query NetworkSetting {\n    networkSetting {\n      externalUrl\n    }\n  }\n":r.m2,"\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n    }\n  }\n":r.a,"\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n":r.FR,"\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n":r.Il,"\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.Xx,"\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.Mi,"\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          finishedAt\n          exitCode\n          stdout\n          stderr\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.$S,"\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n":r.np,"\n  query ListJobs {\n    jobs\n  }\n":r.Ax,"\n  query ListUsers($after: String, $before: String, $first: Int, $last: Int) {\n    users(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.by,"\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n":r.Wd,"\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n":r.Sm,"\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.KZ,"\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.qt,"\n  query WebCrawlerUrls(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    webCrawlerUrls(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          url\n          id\n          createdAt\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.mL};function a(n){var e;return null!==(e=i[n])&&void 0!==e?e:{}}},43240:function(n,e,t){t.d(e,{BX:function(){return r.B}});var r=t(75561)},28312:function(n,e,t){t.d(e,{m:function(){return s}});var r=t(3546),i=t(61200),a=t.n(i),o=t(2578);function s(n){let{timeout:e=2e3,onError:t,onCopyContent:i}=n,[s,u]=r.useState(!1),d=()=>{u(!0),setTimeout(()=>{u(!1)},e)},l=n=>{if("function"==typeof t){null==t||t(n);return}o.A.error("Failed to copy.")};return{isCopied:s,copyToClipboard:n=>{var e;if(n){if(i){i(n),d();return}if(null===(e=navigator.clipboard)||void 0===e?void 0:e.writeText)navigator.clipboard.writeText(n).then(d).catch(l);else{let e=a()(n);e?d():l()}}}}}},16784:function(n,e,t){t.d(e,{d:function(){return i}});var r=t(3546);function i(n){let e=r.useRef(n);return e.current=n,e}},98454:function(n,e,t){t.d(e,{P:function(){return o}});var r=t(40055),i=t(43240);let a=(0,i.BX)("\n  query MeQuery {\n    me {\n      id\n      authToken\n      email\n      isAdmin\n      isPasswordSet\n      name\n    }\n  }\n"),o=()=>(0,r.aM)({query:a})},80605:function(n,e,t){t.d(e,{UA:function(){return f},Uw:function(){return d},c7:function(){return u},jJ:function(){return l},xG:function(){return s}});var r=t(40055),i=t(43240);let a=(0,i.BX)("\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n    }\n  }\n"),o=()=>{let[{data:n}]=(0,r.aM)({query:a});return null==n?void 0:n.serverInfo},s=()=>{var n;return null===(n=o())||void 0===n?void 0:n.isChatEnabled},u=()=>{var n;return null===(n=o())||void 0===n?void 0:n.isAdminInitialized},d=()=>{var n;return null===(n=o())||void 0===n?void 0:n.isEmailConfigured},l=()=>{var n;return null===(n=o())||void 0===n?void 0:n.allowSelfSignup},f=()=>{var n;return null===(n=o())||void 0===n?void 0:n.isDemoMode}},91302:function(n,e,t){t.d(e,{Dp:function(){return p},Ho:function(){return h},QJ:function(){return S},av:function(){return C},kP:function(){return k},zq:function(){return I}});var r,i,a=t(36164),o=t(3546),s=t(11978),u=t(24426),d=t.n(u),l=t(43240),f=t(80605),c=t(11634),g=t(66794);function v(n,e){var t,r;let a=function(n,e){switch(e.type){case i.SignIn:case i.Refresh:return{status:"authenticated",data:e.data};case i.SignOut:return{status:"unauthenticated",data:void 0}}}(0,e);return n.status==a.status&&(t=n.data,r=a.data,(null==t?void 0:t.accessToken)===(null==r?void 0:r.accessToken)&&(null==t?void 0:t.refreshToken)===(null==r?void 0:r.refreshToken))?n:a}(r=i||(i={}))[r.SignIn=0]="SignIn",r[r.SignOut=1]="SignOut",r[r.Refresh=2]="Refresh";let $=o.createContext({}),p=(0,l.BX)("\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n"),m=(0,l.BX)("\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n"),h=n=>{let{children:e}=n,[t,r]=o.useState(!1),[s]=d()(g.nd,void 0),[u,l]=o.useReducer(v,{status:"loading",data:void 0});o.useEffect(()=>{(null==s?void 0:s.accessToken)&&(null==s?void 0:s.refreshToken)?l({type:i.SignIn,data:s}):l({type:i.SignOut}),r(!0)},[]),o.useEffect(()=>{!t||((null==s?void 0:s.accessToken)&&(null==s?void 0:s.refreshToken)?l({type:i.Refresh,data:s}):(null==s?void 0:s.accessToken)||(null==s?void 0:s.refreshToken)||l({type:i.SignOut}))},[s]);let f=o.useMemo(()=>{var n;return(null==u?void 0:u.status)=="authenticated"?{data:{accessToken:u.data.accessToken},status:u.status}:{status:null!==(n=null==u?void 0:u.status)&&void 0!==n?n:"loading",data:null}},[u]);return(0,a.jsx)($.Provider,{value:{authState:u,dispatch:l,session:f},children:e})};class b extends Error{constructor(){super("AuthProvider is missing. Please add the AuthProvider at root level")}}function y(){let n=o.useContext($);if(!n)throw new b;return n}function I(){let{dispatch:n}=y(),[e,t]=d()(g.nd,void 0);return async e=>(t({accessToken:e.accessToken,refreshToken:e.refreshToken}),n({type:i.SignIn,data:e}),!0)}function S(){let n=(0,c.D)(m),{dispatch:e}=y(),[t,r]=d()(g.nd,void 0);return async()=>{await n(),r(void 0),e({type:i.SignOut})}}function k(){let{session:n}=y();return n}let w=["/auth/signin","/auth/signup","/auth/reset-password"];function C(){let n=(0,f.c7)(),e=(0,s.useRouter)(),t=(0,s.usePathname)(),r=(0,s.useSearchParams)(),{data:i,status:a}=k();return o.useEffect(()=>{if("loading"===a||"authenticated"===a||void 0===n)return;let i="/auth/signup"===t&&"true"===r.get("isAdmin");if(!i&&!n)return e.replace("/auth/signup?isAdmin=true");w.includes(t)||e.replace("/auth/signin")},[n,a]),i}},3765:function(n,e,t){t.d(e,{Z:function(){return u}});var r=t(44745),i=t(57778),a=t(79716),o=t(91302),s=t(66794);async function u(n,e){var t;let r=null!==(t=null==e?void 0:e.customFetch)&&void 0!==t?t:window.fetch;if(function(n){var e;if(n.startsWith("/oauth/providers"))return!1;let t=null===(e=(0,s.bW)())||void 0===e?void 0:e.accessToken;if(!t)return!0;try{let{exp:n}=(0,a.o)(t);return(0,s.pw)(n)}catch(n){return!0}}(n))return s.gN.refreshToken(d).then(t=>c(n,e));let i=await r(n,l(e));return 401===i.status?(s.gN.clearAccessToken(),s.gN.refreshToken(d).then(t=>c(n,e))):g(i,e)}async function d(){var n,e;let t=null===(n=(0,s.bW)())||void 0===n?void 0:n.refreshToken;if(!t)return;let r=await f(t);return null==r?void 0:null===(e=r.data)||void 0===e?void 0:e.refreshToken}function l(n){var e;let t=new Headers(null==n?void 0:n.headers);return t.append("authorization","Bearer ".concat(null===(e=(0,s.bW)())||void 0===e?void 0:e.accessToken)),{...n||{},headers:t}}async function f(n){let e=new r.KU({url:"/graphql",requestPolicy:"network-only",exchanges:[r.Ek]}),t=e.createRequestOperation("mutation",(0,i.h)(o.Dp,{refreshToken:n}));return e.executeMutation(t)}function c(n,e){var t;let r=null!==(t=null==e?void 0:e.customFetch)&&void 0!==t?t:window.fetch;return r(n,l(e)).then(n=>g(n,e))}function g(n,e){return(null==n?void 0:n.ok)?(null==e?void 0:e.responseFormatter)?e.responseFormatter(n):(null==e?void 0:e.responseFormat)==="blob"?n.blob():n.json():(null==e?void 0:e.errorHandler)?e.errorHandler(n):void 0}},11634:function(n,e,t){t.d(e,{D:function(){return g},L:function(){return v}});var r=t(22365),i=t(28552),a=t(81013),o=t(79716),s=t(74630),u=t(40055),d=t(44745),l=t(91302),f=t(70410),c=t(66794);function g(n,e){var t;let[r,i]=(0,u.Db)(n),a=(null==e?void 0:e.form)?(t=e.form,n=>{let{graphQLErrors:e=[]}=n;for(let n of e)if(n.extensions&&n.extensions["validation-errors"]){let e=n.extensions["validation-errors"];for(let n of e.errors)t.setError(n.path,n)}else(null==n?void 0:n.originalError)&&t.setError("root",n.originalError)}):void 0,o=async n=>{let t;try{if(null==(t=await i(n))?void 0:t.error)a&&a(t.error),(null==e?void 0:e.onError)&&e.onError(t.error);else if(!(0,s.Z)(null==t?void 0:t.data)){var r;null==e||null===(r=e.onCompleted)||void 0===r||r.call(e,t.data)}}catch(n){(null==e?void 0:e.onError)&&e.onError(n);return}return t};return o}let v=new d.KU({url:"/graphql",requestPolicy:"cache-and-network",exchanges:[(0,i.HG)({keys:{CompletionStats:()=>null,ServerInfo:()=>null,RepositorySearch:()=>null,RepositoryList:()=>null},resolvers:{Query:{invitations:(0,a.N)(),gitRepositories:(0,a.N)(),webCrawlerUrls:(0,a.N)()}},updates:{Mutation:{deleteInvitation(n,e,t,r){n.deleteInvitation&&t.inspectFields("Query").filter(n=>"invitations"===n.fieldName).forEach(n=>{t.updateQuery({query:f.lE,variables:n.arguments},n=>{var t;return(null==n?void 0:null===(t=n.invitations)||void 0===t?void 0:t.edges)&&(n.invitations.edges=n.invitations.edges.filter(n=>n.node.id!==e.id)),n})})},deleteGitRepository(n,e,t,r){n.deleteGitRepository&&t.inspectFields("Query").filter(n=>"gitRepositories"===n.fieldName).forEach(n=>{t.updateQuery({query:f.S1,variables:n.arguments},n=>{var t;return(null==n?void 0:null===(t=n.gitRepositories)||void 0===t?void 0:t.edges)&&(n.gitRepositories.edges=n.gitRepositories.edges.filter(n=>n.node.id!==e.id)),n})})},deleteWebCrawlerUrl(n,e,t,r){n.deleteWebCrawlerUrl&&t.inspectFields("Query").filter(n=>"webCrawlerUrls"===n.fieldName).forEach(n=>{t.updateQuery({query:f.XP,variables:n.arguments},n=>{var t;return(null==n?void 0:null===(t=n.webCrawlerUrls)||void 0===t?void 0:t.edges)&&(n.webCrawlerUrls.edges=n.webCrawlerUrls.edges.filter(n=>n.node.id!==e.id)),n})})}}}}),(0,r.M)(async n=>{let e=(0,c.bW)(),t=null==e?void 0:e.accessToken,r=null==e?void 0:e.refreshToken;return{addAuthToOperation(e){let i=(0,c.bW)();return(t=null==i?void 0:i.accessToken,r=null==i?void 0:i.refreshToken,t)?n.appendHeaders(e,{Authorization:"Bearer ".concat(t)}):e},didAuthError(n,e){let t=n.graphQLErrors.some(n=>{var e;return(null==n?void 0:null===(e=n.extensions)||void 0===e?void 0:e.code)==="UNAUTHORIZED"});return t&&c.gN.clearAccessToken(),t},willAuthError(n){let e=(0,c.bW)();if(t=null==e?void 0:e.accessToken,r=null==e?void 0:e.refreshToken,"query"===n.kind&&n.query.definitions.some(n=>{var e;return"OperationDefinition"===n.kind&&(null===(e=n.name)||void 0===e?void 0:e.value)&&["GetServerInfo"].includes(n.name.value)})||"mutation"===n.kind&&n.query.definitions.some(n=>{var e;return"OperationDefinition"===n.kind&&(null===(e=n.name)||void 0===e?void 0:e.value)&&["tokenAuth","register"].includes(n.name.value)})||r&&"mutation"===n.kind&&n.query.definitions.some(n=>{var e;return"OperationDefinition"===n.kind&&(null==n?void 0:null===(e=n.name)||void 0===e?void 0:e.value)==="refreshToken"}))return!1;if(!t)return c.gN.clearAccessToken(),!0;try{let{exp:n}=(0,o.o)(t);return(0,c.pw)(n)}catch(n){return!0}},refreshAuth:async()=>c.gN.refreshToken(async()=>{var e;let t=null===(e=(0,c.bW)())||void 0===e?void 0:e.refreshToken;if(t)return n.mutate(l.Dp,{refreshToken:t}).then(n=>{var e;return null==n?void 0:null===(e=n.data)||void 0===e?void 0:e.refreshToken})})}}),(0,d.Dk)({onError(n){n.message.startsWith("[GraphQL]")&&(n.message=n.message.replace("[GraphQL]","").trim())}}),d.Ek]})},70410:function(n,e,t){t.d(e,{Cl:function(){return f},DQ:function(){return u},GG:function(){return o},S1:function(){return a},XP:function(){return v},Y6:function(){return l},kb:function(){return c},lE:function(){return i},ts:function(){return g},yB:function(){return s},yw:function(){return d}});var r=t(43240);let i=(0,r.BX)("\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),a=(0,r.BX)("\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),o=(0,r.BX)("\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          finishedAt\n          exitCode\n          stdout\n          stderr\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),s=(0,r.BX)("\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n"),u=(0,r.BX)("\n  query ListJobs {\n    jobs\n  }\n"),d=(0,r.BX)("\n  query ListUsers($after: String, $before: String, $first: Int, $last: Int) {\n    users(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),l=(0,r.BX)("\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n"),f=(0,r.BX)("\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n"),c=(0,r.BX)("\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),g=(0,r.BX)("\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),v=(0,r.BX)("\n  query WebCrawlerUrls(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    webCrawlerUrls(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          url\n          id\n          createdAt\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n")},66794:function(n,e,t){t.d(e,{bW:function(){return s},gN:function(){return c},nd:function(){return o},pw:function(){return l}});var r=t(79716),i=t(74630),a=t(74248);let o="_tabby_auth",s=()=>{if((0,a.S_)()){let n=localStorage.getItem(o);if(n)try{return JSON.parse(n)}catch(n){}}},u=n=>{localStorage.setItem(o,JSON.stringify(n))},d=()=>{localStorage.removeItem(o),window.dispatchEvent(new StorageEvent("storage",{storageArea:window.localStorage,url:window.location.href,key:o}))},l=n=>!!(0,i.Z)(n)||Date.now()>1e3*n,f=n=>!(0,i.Z)(n)&&Date.now()-1e3*n<6e4,c=new class{clearAccessToken(){let n=s();n&&u({...n,accessToken:""})}async refreshToken(n){try{var e;if(void 0===(null===(e=navigator)||void 0===e?void 0:e.locks))throw console.error("The Web Locks API is not supported in your browser. Please upgrade to a newer browser version."),Error();await navigator.locks.request("_tabby_auth_lock",async()=>{let e;let t=s(),i=null==t?void 0:t.accessToken,a=null==t?void 0:t.refreshToken;if(i){let{iat:a}=(0,r.o)(i);e=f(a)?t:await n()}else a&&(e=await n());e?u(e):d()})}catch(n){d()}}}}}]);